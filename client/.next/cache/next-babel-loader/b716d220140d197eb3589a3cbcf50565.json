{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Afreen Hussain'\\\\Desktop\\\\aws-pro\\\\client\\\\pages\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nvar Register = function Register() {\n  _s();\n\n  var _useState = useState({\n    name: 'afreen',\n    email: 'afreenhussain@gmail.com',\n    password: '123SD',\n    error: '',\n    success: '',\n    buttonText: 'Register',\n    loadedCategories: [],\n    categories: []\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      email = state.email,\n      password = state.password,\n      error = state.error,\n      success = state.success,\n      buttonText = state.buttonText,\n      loadedCategories = state.loadedCategories,\n      categories = state.categories;\n  useEffect(function () {\n    isAuth() && Router.push('/');\n  }, []); // load categories when component mounts using useEffect\n\n  useEffect(function () {\n    loadCategories();\n  }, []);\n\n  var loadCategories = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(API, \"/categories\"));\n\n            case 2:\n              response = _context.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                loadedCategories: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadCategories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleToggle = function handleToggle(c) {\n    return function () {\n      // return the first index or -1\n      var clickedCategory = categories.indexOf(c);\n\n      var all = _toConsumableArray(categories);\n\n      if (clickedCategory === -1) {\n        all.push(c);\n      } else {\n        all.splice(clickedCategory, 1);\n      }\n\n      console.log('all >> categories', all);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        categories: all,\n        success: '',\n        error: ''\n      }));\n    };\n  }; // show categories > checkbox\n\n\n  var showCategories = function showCategories() {\n    return loadedCategories && loadedCategories.map(function (c, i) {\n      return __jsx(\"li\", {\n        className: \"list-unstyled\",\n        key: c._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: handleToggle(c._id),\n        className: \"mr-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }), __jsx(\"label\", {\n        className: \"form-check-label\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, c.name));\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      var _objectSpread2;\n\n      setState(_objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, name, e.target.value), _defineProperty(_objectSpread2, \"error\", ''), _defineProperty(_objectSpread2, \"success\", ''), _defineProperty(_objectSpread2, \"buttonText\", 'Register'), _objectSpread2)));\n    };\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              console.table({\n                name: name,\n                email: email,\n                password: password,\n                categories: categories\n              });\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Registering'\n              }));\n              _context2.prev = 3;\n              _context2.next = 6;\n              return axios.post(\"\".concat(API, \"/register\"), {\n                name: name,\n                email: email,\n                password: password,\n                categories: categories\n              });\n\n            case 6:\n              response = _context2.sent;\n              console.log(response);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n              }));\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Register',\n                error: _context2.t0.response.data.error\n              }));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n\n\n  var registerForm = function registerForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: name,\n      onChange: handleChange('name'),\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type your name\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: email,\n      onChange: handleChange('email'),\n      type: \"email\",\n      className: \"form-control\",\n      placeholder: \"Type your email\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, __jsx(\"input\", {\n      value: password,\n      onChange: handleChange('password'),\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"Type your password\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted ml-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Category\"), __jsx(\"ul\", {\n      style: {\n        maxHeight: '100px',\n        overflowY: 'scroll'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, showCategories())), __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Register\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\n_s(Register, \"Sx8YUpO14CuS+1WWxehQZB+q8A0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Afreen Hussain'/Desktop/aws-pro/client/pages/register.js"],"names":["useState","useEffect","Layout","Router","axios","showSuccessMessage","showErrorMessage","API","isAuth","Register","name","email","password","error","success","buttonText","loadedCategories","categories","state","setState","push","loadCategories","get","response","data","handleToggle","c","clickedCategory","indexOf","all","splice","console","log","showCategories","map","i","_id","handleChange","e","target","value","handleSubmit","preventDefault","table","post","message","registerForm","maxHeight","overflowY"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,mBAArD;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACOT,QAAQ,CAAC;AAC/BU,IAAAA,IAAI,EAAE,QADyB;AAE/BC,IAAAA,KAAK,EAAE,yBAFwB;AAG/BC,IAAAA,QAAQ,EAAE,OAHqB;AAI/BC,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,OAAO,EAAE,EALsB;AAM/BC,IAAAA,UAAU,EAAE,UANmB;AAO/BC,IAAAA,gBAAgB,EAAE,EAPa;AAQ/BC,IAAAA,UAAU,EAAE;AARmB,GAAD,CADf;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAAA,MAYXT,IAZW,GAYyEQ,KAZzE,CAYXR,IAZW;AAAA,MAYLC,KAZK,GAYyEO,KAZzE,CAYLP,KAZK;AAAA,MAYEC,QAZF,GAYyEM,KAZzE,CAYEN,QAZF;AAAA,MAYYC,KAZZ,GAYyEK,KAZzE,CAYYL,KAZZ;AAAA,MAYmBC,OAZnB,GAYyEI,KAZzE,CAYmBJ,OAZnB;AAAA,MAY4BC,UAZ5B,GAYyEG,KAZzE,CAY4BH,UAZ5B;AAAA,MAYwCC,gBAZxC,GAYyEE,KAZzE,CAYwCF,gBAZxC;AAAA,MAY0DC,UAZ1D,GAYyEC,KAZzE,CAY0DD,UAZ1D;AAcnBhB,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,MAAM,MAAML,MAAM,CAACiB,IAAP,CAAY,GAAZ,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT,CAdmB,CAkBnB;;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIjB,KAAK,CAACkB,GAAN,WAAaf,GAAb,iBADJ;;AAAA;AACbgB,cAAAA,QADa;AAEnBJ,cAAAA,QAAQ,iCAAMD,KAAN;AAAaF,gBAAAA,gBAAgB,EAAEO,QAAQ,CAACC;AAAxC,iBAAR;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdH,cAAc;AAAA;AAAA;AAAA,KAApB;;AAKA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA,WAAI,YAAM;AAC5B;AACA,UAAMC,eAAe,GAAGV,UAAU,CAACW,OAAX,CAAmBF,CAAnB,CAAxB;;AACA,UAAMG,GAAG,sBAAOZ,UAAP,CAAT;;AAEA,UAAIU,eAAe,KAAK,CAAC,CAAzB,EAA4B;AACxBE,QAAAA,GAAG,CAACT,IAAJ,CAASM,CAAT;AACH,OAFD,MAEO;AACHG,QAAAA,GAAG,CAACC,MAAJ,CAAWH,eAAX,EAA4B,CAA5B;AACH;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACAV,MAAAA,QAAQ,iCAAMD,KAAN;AAAaD,QAAAA,UAAU,EAAEY,GAAzB;AAA8Bf,QAAAA,OAAO,EAAE,EAAvC;AAA2CD,QAAAA,KAAK,EAAE;AAAlD,SAAR;AACH,KAZqB;AAAA,GAAtB,CA5BmB,CA0CnB;;;AACA,MAAMoB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,WACIjB,gBAAgB,IAChBA,gBAAgB,CAACkB,GAAjB,CAAqB,UAACR,CAAD,EAAIS,CAAJ;AAAA,aACjB;AAAI,QAAA,SAAS,EAAC,eAAd;AAA8B,QAAA,GAAG,EAAET,CAAC,CAACU,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEX,YAAY,CAACC,CAAC,CAACU,GAAH,CAA7C;AAAsD,QAAA,SAAS,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCV,CAAC,CAAChB,IAAvC,CAFJ,CADiB;AAAA,KAArB,CAFJ;AASH,GAVD;;AAYA,MAAM2B,YAAY,GAAG,SAAfA,YAAe,CAAA3B,IAAI;AAAA,WAAI,UAAA4B,CAAC,EAAI;AAAA;;AAC9BnB,MAAAA,QAAQ,iCAAMD,KAAN,6DAAcR,IAAd,EAAqB4B,CAAC,CAACC,MAAF,CAASC,KAA9B,4CAA4C,EAA5C,8CAAyD,EAAzD,iDAAyE,UAAzE,oBAAR;AACH,KAFwB;AAAA,GAAzB;;AAIA,MAAMC,YAAY;AAAA,yEAAG,kBAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACI,cAAF;AACAX,cAAAA,OAAO,CAACY,KAAR,CAAc;AACVjC,gBAAAA,IAAI,EAAJA,IADU;AAEVC,gBAAAA,KAAK,EAALA,KAFU;AAGVC,gBAAAA,QAAQ,EAARA,QAHU;AAIVK,gBAAAA,UAAU,EAAVA;AAJU,eAAd;AAMAE,cAAAA,QAAQ,iCAAMD,KAAN;AAAaH,gBAAAA,UAAU,EAAE;AAAzB,iBAAR;AARiB;AAAA;AAAA,qBAUUX,KAAK,CAACwC,IAAN,WAAcrC,GAAd,gBAA8B;AACjDG,gBAAAA,IAAI,EAAJA,IADiD;AAEjDC,gBAAAA,KAAK,EAALA,KAFiD;AAGjDC,gBAAAA,QAAQ,EAARA,QAHiD;AAIjDK,gBAAAA,UAAU,EAAVA;AAJiD,eAA9B,CAVV;;AAAA;AAUPM,cAAAA,QAVO;AAgBbQ,cAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAJ,cAAAA,QAAQ,iCACDD,KADC;AAEJR,gBAAAA,IAAI,EAAE,EAFF;AAGJC,gBAAAA,KAAK,EAAE,EAHH;AAIJC,gBAAAA,QAAQ,EAAE,EAJN;AAKJG,gBAAAA,UAAU,EAAE,WALR;AAMJD,gBAAAA,OAAO,EAAES,QAAQ,CAACC,IAAT,CAAcqB;AANnB,iBAAR;AAjBa;AAAA;;AAAA;AAAA;AAAA;AA0Bbd,cAAAA,OAAO,CAACC,GAAR;AACAb,cAAAA,QAAQ,iCAAMD,KAAN;AAAaH,gBAAAA,UAAU,EAAE,UAAzB;AAAqCF,gBAAAA,KAAK,EAAE,aAAMU,QAAN,CAAeC,IAAf,CAAoBX;AAAhE,iBAAR;;AA3Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZ4B,YAAY;AAAA;AAAA;AAAA,KAAlB,CA3DmB,CA0FnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA,WACjB;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAE/B,IADX;AAEI,MAAA,QAAQ,EAAE2B,YAAY,CAAC,MAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,SAAS,EAAC,cAJd;AAKI,MAAA,WAAW,EAAC,gBALhB;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAWI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAE1B,KADX;AAEI,MAAA,QAAQ,EAAE0B,YAAY,CAAC,OAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,SAAS,EAAC,cAJd;AAKI,MAAA,WAAW,EAAC,iBALhB;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,EAqBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,KAAK,EAAEzB,QADX;AAEI,MAAA,QAAQ,EAAEyB,YAAY,CAAC,UAAD,CAF1B;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,SAAS,EAAC,cAJd;AAKI,MAAA,WAAW,EAAC,oBALhB;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CArBJ,EAgCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAI,MAAA,KAAK,EAAE;AAAEU,QAAAA,SAAS,EAAE,OAAb;AAAsBC,QAAAA,SAAS,EAAE;AAAjC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDf,cAAc,EAAvE,CAFJ,CAhCJ,EAqCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6ClB,UAA7C,CADJ,CArCJ,CADiB;AAAA,GAArB;;AA4CA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKD,OAAO,IAAIT,kBAAkB,CAACS,OAAD,CAHlC,EAIKD,KAAK,IAAIP,gBAAgB,CAACO,KAAD,CAJ9B,EAKKiC,YAAY,EALjB,CADJ,CADJ;AAWH,CA5KD;;GAAMrC,Q;;KAAAA,Q;AA8KN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nconst Register = () => {\n    const [state, setState] = useState({\n        name: 'afreen',\n        email: 'afreenhussain@gmail.com',\n        password: '123SD',\n        error: '',\n        success: '',\n        buttonText: 'Register',\n        loadedCategories: [],\n        categories: []\n    });\n\n    const { name, email, password, error, success, buttonText, loadedCategories, categories } = state;\n\n    useEffect(() => {\n        isAuth() && Router.push('/');\n    }, []);\n\n    // load categories when component mounts using useEffect\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const loadCategories = async () => {\n        const response = await axios.get(`${API}/categories`);\n        setState({ ...state, loadedCategories: response.data });\n    };\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const clickedCategory = categories.indexOf(c);\n        const all = [...categories];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        console.log('all >> categories', all);\n        setState({ ...state, categories: all, success: '', error: '' });\n    };\n\n    // show categories > checkbox\n    const showCategories = () => {\n        return (\n            loadedCategories &&\n            loadedCategories.map((c, i) => (\n                <li className=\"list-unstyled\" key={c._id}>\n                    <input type=\"checkbox\" onChange={handleToggle(c._id)} className=\"mr-2\" />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.table({\n            name,\n            email,\n            password,\n            categories\n        });\n        setState({ ...state, buttonText: 'Registering' });\n        try {\n            const response = await axios.post(`${API}/register`, {\n                name,\n                email,\n                password,\n                categories\n            });\n            console.log(response);\n            setState({\n                ...state,\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n            });\n        } catch (error) {\n            console.log(error);\n            setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n        }\n    };\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n    //     setState({ ...state, buttonText: 'Registering' });\n    //     // console.table({ name, email, password });\n    //     axios\n    //         .post(`http://localhost:8000/api/register`, {\n    //             name,\n    //             email,\n    //             password\n    //         })\n    //         .then(response => {\n    //             console.log(response);\n    //             setState({\n    //                 ...state,\n    //                 name: '',\n    //                 email: '',\n    //                 password: '',\n    //                 buttonText: 'Submitted',\n    //                 success: response.data.message\n    //             });\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n    //         });\n    // };\n\n    const registerForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    value={name}\n                    onChange={handleChange('name')}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type your name\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={email}\n                    onChange={handleChange('email')}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Type your email\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={password}\n                    onChange={handleChange('password')}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type your password\"\n                    required\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted ml-4\">Category</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\n            </div>\n\n            <div className=\"form-group\">\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <h1>Register</h1>\n                <br />\n                {success && showSuccessMessage(success)}\n                {error && showErrorMessage(error)}\n                {registerForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}