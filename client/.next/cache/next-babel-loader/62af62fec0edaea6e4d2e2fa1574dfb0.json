{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Afreen Hussain'\\\\Desktop\\\\aws-pro\\\\client\\\\pages\\\\register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nconst Register = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: 'afreen',\n    email: 'afreenhussain@gmail.com',\n    password: '123SD',\n    error: '',\n    success: '',\n    buttonText: 'Register',\n    loadedCategories: [],\n    categories: []\n  });\n  const {\n    name,\n    email,\n    password,\n    error,\n    success,\n    buttonText,\n    loadedCategories,\n    categories\n  } = state;\n  useEffect(() => {\n    isAuth() && Router.push('/');\n  }, []); // load categories when component mounts using useEffect\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loadedCategories: response.data\n    }));\n  };\n\n  const handleToggle = c => () => {\n    // return the first index or -1\n    const clickedCategory = categories.indexOf(c);\n    const all = [...categories];\n\n    if (clickedCategory === -1) {\n      all.push(c);\n    } else {\n      all.splice(clickedCategory, 1);\n    }\n\n    console.log('all >> categories', all);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      categories: all,\n      success: '',\n      error: ''\n    }));\n  }; // show categories > checkbox\n\n\n  const showCategories = () => {\n    return loadedCategories && loadedCategories.map((c, i) => __jsx(\"li\", {\n      className: \"list-unstyled\",\n      key: c._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: handleToggle(c._id),\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, c.name)));\n  };\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: '',\n      success: '',\n      buttonText: 'Register'\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.table({\n      name,\n      email,\n      password,\n      categories\n    });\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: 'Registering'\n    }));\n\n    try {\n      const response = await axios.post(`${API}/register`, {\n        name,\n        email,\n        password,\n        categories\n      });\n      console.log(response);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: '',\n        email: '',\n        password: '',\n        buttonText: 'Submitted',\n        success: response.data.message\n      }));\n    } catch (error) {\n      console.log(error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Register',\n        error: error.response.data.error\n      }));\n    }\n  }; // const handleSubmit = e => {\n  //     e.preventDefault();\n  //     setState({ ...state, buttonText: 'Registering' });\n  //     // console.table({ name, email, password });\n  //     axios\n  //         .post(`http://localhost:8000/api/register`, {\n  //             name,\n  //             email,\n  //             password\n  //         })\n  //         .then(response => {\n  //             console.log(response);\n  //             setState({\n  //                 ...state,\n  //                 name: '',\n  //                 email: '',\n  //                 password: '',\n  //                 buttonText: 'Submitted',\n  //                 success: response.data.message\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n  //         });\n  // };\n\n\n  const registerForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: name,\n    onChange: handleChange('name'),\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type your name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    onChange: handleChange('email'),\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Type your email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: password,\n    onChange: handleChange('password'),\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type your password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: '100px',\n      overflowY: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Register\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), registerForm()));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Afreen Hussain'/Desktop/aws-pro/client/pages/register.js"],"names":["useState","useEffect","Layout","Router","axios","showSuccessMessage","showErrorMessage","API","isAuth","Register","state","setState","name","email","password","error","success","buttonText","loadedCategories","categories","push","loadCategories","response","get","data","handleToggle","c","clickedCategory","indexOf","all","splice","console","log","showCategories","map","i","_id","handleChange","e","target","value","handleSubmit","preventDefault","table","post","message","registerForm","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { showSuccessMessage, showErrorMessage } from '../helpers/alerts';\nimport { API } from '../config';\nimport { isAuth } from '../helpers/auth';\n\nconst Register = () => {\n    const [state, setState] = useState({\n        name: 'afreen',\n        email: 'afreenhussain@gmail.com',\n        password: '123SD',\n        error: '',\n        success: '',\n        buttonText: 'Register',\n        loadedCategories: [],\n        categories: []\n    });\n\n    const { name, email, password, error, success, buttonText, loadedCategories, categories } = state;\n\n    useEffect(() => {\n        isAuth() && Router.push('/');\n    }, []);\n\n    // load categories when component mounts using useEffect\n    useEffect(() => {\n        loadCategories();\n    }, []);\n\n    const loadCategories = async () => {\n        const response = await axios.get(`${API}/categories`);\n        setState({ ...state, loadedCategories: response.data });\n    };\n\n    const handleToggle = c => () => {\n        // return the first index or -1\n        const clickedCategory = categories.indexOf(c);\n        const all = [...categories];\n\n        if (clickedCategory === -1) {\n            all.push(c);\n        } else {\n            all.splice(clickedCategory, 1);\n        }\n        console.log('all >> categories', all);\n        setState({ ...state, categories: all, success: '', error: '' });\n    };\n\n    // show categories > checkbox\n    const showCategories = () => {\n        return (\n            loadedCategories &&\n            loadedCategories.map((c, i) => (\n                <li className=\"list-unstyled\" key={c._id}>\n                    <input type=\"checkbox\" onChange={handleToggle(c._id)} className=\"mr-2\" />\n                    <label className=\"form-check-label\">{c.name}</label>\n                </li>\n            ))\n        );\n    };\n\n    const handleChange = name => e => {\n        setState({ ...state, [name]: e.target.value, error: '', success: '', buttonText: 'Register' });\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        console.table({\n            name,\n            email,\n            password,\n            categories\n        });\n        setState({ ...state, buttonText: 'Registering' });\n        try {\n            const response = await axios.post(`${API}/register`, {\n                name,\n                email,\n                password,\n                categories\n            });\n            console.log(response);\n            setState({\n                ...state,\n                name: '',\n                email: '',\n                password: '',\n                buttonText: 'Submitted',\n                success: response.data.message\n            });\n        } catch (error) {\n            console.log(error);\n            setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n        }\n    };\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n    //     setState({ ...state, buttonText: 'Registering' });\n    //     // console.table({ name, email, password });\n    //     axios\n    //         .post(`http://localhost:8000/api/register`, {\n    //             name,\n    //             email,\n    //             password\n    //         })\n    //         .then(response => {\n    //             console.log(response);\n    //             setState({\n    //                 ...state,\n    //                 name: '',\n    //                 email: '',\n    //                 password: '',\n    //                 buttonText: 'Submitted',\n    //                 success: response.data.message\n    //             });\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //             setState({ ...state, buttonText: 'Register', error: error.response.data.error });\n    //         });\n    // };\n\n    const registerForm = () => (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input\n                    value={name}\n                    onChange={handleChange('name')}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type your name\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={email}\n                    onChange={handleChange('email')}\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Type your email\"\n                    required\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    value={password}\n                    onChange={handleChange('password')}\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Type your password\"\n                    required\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted ml-4\">Category</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'scroll' }}>{showCategories()}</ul>\n            </div>\n\n            <div className=\"form-group\">\n                <button className=\"btn btn-outline-warning\">{buttonText}</button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Layout>\n            <div className=\"col-md-6 offset-md-3\">\n                <h1>Register</h1>\n                <br />\n                {success && showSuccessMessage(success)}\n                {error && showErrorMessage(error)}\n                {registerForm()}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}